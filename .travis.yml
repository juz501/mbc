language: php

env:
  global:

    # Enter the SCP connection string for the remote host. This should usually contain a username,
    # hostname and absolute server path. The remote user should have the Chromatix Services public
    # SSH key set up under ~/.ssh/authorized_key.
    - SCP_PATH_STAGING=threada1@threadart.org:/home5/threada1/public_html/mbc/mbc/wp-content/themes/mbc
    - SCP_PATH_MASTER=threada1@threadart.org:/home5/threada1/public_html/mbc-production/wp-content/themes/mbc

sudo: false

branches:
  except:
  - /^v?[0-9]+\.[0-9]+\.[0-9]+/

php:
- 7.1

git:
  depth: 1

before_install:
# Ensure correct/latest LTS version of Node is used
- nvm install --lts
- node --version
- export PATH=$(yarn global bin):$PATH

install:
# Install dependencies from composer.json, preferring dist versions rather than entire git repos.
- travis_retry composer install --prefer-dist --no-interaction

# Install dependencies from package.json.
- travis_retry yarn install

script:
- yarn lint
- composer test
- yarn test

before_deploy:

  # Only continue on certain branch(es) + only on our main PHP version run, so we only deploy once!
  - if [ "$TRAVIS_BRANCH" != "staging" ] && [ "$TRAVIS_BRANCH" != "master" ]; then travis_terminate  0; fi
  - if [ "$TRAVIS_PHP_VERSION" != "7.1" ]; then travis_terminate 0; fi

  # Install Node JS dependencies.
  - travis_retry yarn

  # Install gulp-cli, and build assets.
  - travis_retry yarn global add gulp-cli
  - gulp build

deploy:
  - provider: script

    # Explicitly set all_branches here, as we have checked the branch in before_deploy to save time.
    on:
      all_branches: true

    # Must skip_cleanup because we need to deploy our build artifacts as well.
    skip_cleanup: true

    # Deploy via rsync (note: do not use travis_retry here, it is not available).
    script: curl --fail --location https://chr-cicd.herokuapp.com/scripts/rsync.sh | bash

notifications:
  email:
    - julianc+mbc@gmail.com